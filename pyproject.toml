[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "N806",  # variable in function should be lowercase (for compatibility)
    "N803",  # argument name should be lowercase (for compatibility)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["N802", "N803"]  # Allow uppercase function names in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to false for gradual typing adoption
ignore_missing_imports = true
exclude = [
    "build/",
    "dist/",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
    "build/*",
    "dist/*",
    "*.egg-info/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
